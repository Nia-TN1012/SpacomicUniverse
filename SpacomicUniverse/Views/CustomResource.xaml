<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SpacomicUniverse">

	<SolidColorBrush x:Key="PronamaGreenKey" Color="#FF15A63F"/>

	<Style x:Key="DarkMaterialBorderStyleForGridViewItemKey" TargetType="Border">
		<Setter Property="BorderBrush" Value="#FF202020"/>
		<Setter Property="BorderThickness" Value="1,1,1,3"/>
	</Style>
	
	<Style x:Key="DarkMaterialBorderStyleKey" TargetType="Border"
		   BasedOn="{StaticResource DarkMaterialBorderStyleForGridViewItemKey}">
		<Setter Property="Margin" Value="5"/>
	</Style>

	<Style x:Key="DarkYellowMaterialBorderStyleKey" TargetType="Border"
		   BasedOn="{StaticResource DarkMaterialBorderStyleKey}">
		<Setter Property="BorderBrush" Value="#FF323200"/>
		<Setter Property="Background" Value="#20FFFF00"/>
	</Style>

	<Style x:Key="AppButtonStyleKey" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Presenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Presenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Presenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="Presenter">
							<ContentPresenter x:Name="TextPresenter"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  AutomationProperties.AccessibilityView="Raw"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AppBarButtonStyleKey" TargetType="Button"
		   BasedOn="{StaticResource AppButtonStyleKey}">
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
	</Style>

	<Style x:Key="AppToggleButtonStyleKey" TargetType="ToggleButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Presenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Presenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Presenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="Presenter">
							<ContentPresenter x:Name="TextPresenter"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  AutomationProperties.AccessibilityView="Raw"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="AppBarToggleButtonStyleKey" TargetType="ToggleButton"
		   BasedOn="{StaticResource AppToggleButtonStyleKey}">
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
	</Style>

	<Style TargetType="RadioButton" x:Key="SplitViewRadioButtonStyleKey">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Presenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Presenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMarkPresenter"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PronamaGreenKey}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="Presenter" Height="48">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="48"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>

							<Grid x:Name="CheckMarkPresenter"
								  HorizontalAlignment="Left"
								  Width="5"
								  Background="{x:Null}"/>

							<!-- アイコン部 -->
							<ContentPresenter x:Name="IconPresenter"
											  Margin="5"
											  HorizontalAlignment="Center" VerticalAlignment="Center"
											  FontFamily="{ThemeResource SymbolThemeFontFamily}"
											  Content="{TemplateBinding Tag}"/>

							<!-- テキスト部 -->
							<ContentPresenter x:Name="TextPresenter"
											  Margin="5,0,0,0"
											  Grid.Column="1"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  AutomationProperties.AccessibilityView="Raw"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TableCellLikeGridStyleKey" TargetType="Grid">
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Background" Value="#10FFFFFF"/>
	</Style>

	<Style x:Key="TableHeaderCellLikeGridStyleKey" TargetType="Grid"
		   BasedOn="{StaticResource TableCellLikeGridStyleKey}">
		<Setter Property="Background" Value="#20FFFFFF"/>
	</Style>

	<Style x:Key="TableCellLikeTextBlockStyleKey" TargetType="TextBlock">
		<Setter Property="Margin" Value="5"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
	</Style>

	<Style x:Key="TableHeaderCellLikeTextBlockStyleKey" TargetType="TextBlock"
		   BasedOn="{StaticResource TableCellLikeTextBlockStyleKey}">
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<Style x:Key="TableHeaderCellLikeIconTextBlockStyleKey" TargetType="TextBlock"
		   BasedOn="{StaticResource TableCellLikeTextBlockStyleKey}">
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

</ResourceDictionary>
